import { Picker } from "@react-native-picker/picker"; // Install this library if needed

<View style={styles.languagePicker}>
  <Text style={styles.languageLabel}>Choose Language:</Text>
  <Picker
    selectedValue={language}
    style={styles.languagePickerDropdown}
    onValueChange={(itemValue) => setLanguage(itemValue)}
  >
    <Picker.Item label="English" value="en" />
    <Picker.Item label="Hindi" value="hi" />
    <Picker.Item label="Tamil" value="ta" />
    <Picker.Item label="Telugu" value="te" />
    <Picker.Item label="Marathi" value="mr" />
    <Picker.Item label="Gujarati" value="gu" />
    <Picker.Item label="Bengali" value="bn" />
  </Picker>
</View>

const handleSendMessage = async () => {
  if (message.trim() === "") {
    Alert.alert("Empty Message", "Please type a message.");
    return;
  }

  setChatMessages((prev) => [...prev, { text: message, isBot: false }]);
  setLoading(true);

  try {
    const response = await fetch("http://192.168.1.10:8080/get", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ msg: message, language }), // Pass language here
    });

    const json = await response.json();
    if (json.answer) {
      setChatMessages((prev) => [...prev, { text: json.answer, isBot: true }]);
      Speech.speak(json.answer, { language }); // Speak in the selected language
    } else {
      Alert.alert("Error", "Invalid response from the server.");
    }
  } catch (error) {
    Alert.alert("Error", "Failed to fetch response.");
    console.error("Error during text chat processing:", error);
  } finally {
    setLoading(false);
  }

  setMessage("");
};
languagePicker: {
  flexDirection: "row",
  alignItems: "center",
  padding: 10,
  backgroundColor: "#f3f3f3",
},
languageLabel: {
  fontSize: 16,
  marginRight: 10,
},
languagePickerDropdown: {
  height: 40,
  flex: 1,
  borderRadius: 8,
  backgroundColor: "#fff",
  borderWidth: 1,
  borderColor: "#ddd",
},
